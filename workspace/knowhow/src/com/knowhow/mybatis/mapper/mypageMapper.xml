<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mypage">
	<!-- 내 정보 -->
	<select id="selectMyInfo" parameterType="long" resultType="memberVO" >
		select member_id, member_identification, member_password, member_name, member_age, member_email, 
		member_job, member_nickname, resume_existence 
		from tbl_member where member_id = #{memberId}
	</select>
	
	<!-- 내 질문글 -->
	<select id="selectMyQuestions" parameterType="long" resultType="myQuestionDTO">
		select q.question_id question_id, question_title, 
		question_content, date_format(question_regdate, '%Y-%m-%d') question_regdate, date_format(question_upddate, '%Y-%m-%d') question_upddate, 
		q.member_id member_id, q.category_id category_id, 
		category_name, count(answer_id) count_answer 
		from tbl_question q join tbl_category c on q.category_id=c.category_id join tbl_answer a on a.question_id=q.question_id group by q.question_id 
		having member_id = #{memberId}
	</select>
	
	<!-- 내 답변글 -->
	<select id="selectMyAnswers" parameterType="long" resultType="myAnswerDTO">
		select a.answer_id answer_id, answer_title, answer_content, 
		date_format(answer_regdate, '%Y-%m-%d') answer_regdate, 
		date_format(answer_upddate, '%Y-%m-%d') answer_upddate, 
		a.member_id member_id, q.question_id question_id, 
		category_name, count(al.answer_like_id) count_answer_like 
		from tbl_answer a join tbl_question q  on a.question_id=q.question_id 
		join tbl_category c on q.category_id=c.category_id 
		join tbl_answer_like al 
		on al.answer_id = a.answer_id 
		group by a.answer_id 
		having a.member_id= #{memberId}
<!-- 		order by answer_id desc 
		limit #{startRow}, #{rowCount} -->
	</select>
	
	<select id="isNextAnswer" parameterType="map" resultType="answerVO">
		select answer_id 
		from tbl_answer 
		where answer_id = #{answerId} 
		limit #{nextStartRow}, #{rowCount}
	</select>
	
	<!-- 내가 좋아요 한 답변 -->
	<select id="selectMylikeAnswer" parameterType="long" resultType="myAnswerDTO">
		select a.answer_id answer_id, answer_title, answer_content, 
		answer_regdate, 
		answer_upddate, 
		al.member_id member_id, 
		category_name, count_answer_like 
		from view_myAnswer a join tbl_answer_like al 
		on a.answer_id=al.answer_id 
		where al.member_id= #{memberId}
	</select>
	
	<!-- 내가 좋아요 한 질문 -->
	<select id="selectMylikeQuestion" parameterType="long" resultType="myQuestionDTO">
		select q.question_id question_id, question_title, 
		question_content,question_regdate, question_upddate, 
		ql.member_id member_id, category_id, 
		category_name,count_answer 
		from view_myQuestion q join tbl_question_like ql 
		on q.question_id=ql.question_id 
		where ql.member_id=#{memberId}
	</select>	
	
	<!-- 내가 쓴 댓글 in 질문 -->
	<select id="myCommentsInQuestion" parameterType="long" resultType="questionCommentVO">
		select comment_id, comment_content, comment_depth, comment_regdate, comment_upddate, 
		comment_group, member_id, question_id 
		from tbl_question_comment 
		where member_id = #{memberId}
	</select>
	
	<!-- 내가 쓴 댓글 in 답변 -->
	<select id="myCommentsInAnswer" parameterType="long" resultType="answerCommentVO">
		select comment_id, comment_content, comment_depth, comment_regdate, comment_upddate, 
		comment_group, member_id, question_id 
		from tbl_question_comment 
		where member_id = #{memberId}
	</select>
	
	<!-- 내 질문이 받은 좋아요 수 -->
	<select id="countMyLikedQuestion" parameterType="long" resultType="long">
		select count(like_id) my_question_liked 
		from tbl_question q left join tbl_question_like ql  
		on q.question_id = ql.question_id 
		group by q.question_id 
		having member_id = #{memberId}
	</select>
	
	<!-- 내 답변이 받은 좋아요 수 -->
	<select id="countMyLikedAnswer" parameterType="long" resultType="long">
		select count(answer_like_id) answer_liked 
		from tbl_answer a left join tbl_answer_like al 
		on a.answer_id = al.answer_id 
		group by a.answer_id 
		having a.member_id = #{memberId}
	</select>
	
	<!-- 내가 받은 추천 수 각각 + 총 -->
	<select id="countLikedIGot" parameterType="long" resultType="countLikedDTO">
		select member_id, count_question_liked, count_answer_liked, count_total_liked 
		from view_count_liked_all where member_id = #{memberId}
	</select>
	
	<!-- 내가 쓴 질문, 답변, 문의 개수 -->
	<select id="countMyBoards" parameterType="long" resultType="countBoardsDTO">
		select count_question, count_answer, count_ask_admin 
		from view_count_boards where member_id = #{memberId}
	</select>
	
	<!-- 내가 쓴 댓글 개수 -->
	<select id="countMyComments" parameterType="long" resultType="countCommentDTO">
		select member_id, count_question_comment, count_answer_comment, 
		count_total_comments from view_count_comment where member_id = #{memberId}
	</select>
	
	<!-- 내가 좋아요 한 질문, 답변 개수 -->
	<select id="countBoardsILiked" parameterType="long" resultType="countLikeDTO">
		select member_id, count_question_like, count_answer_like, 
		count_total_like from view_like_count where member_id = #{memberId}
	</select>
	
	<!-- 질문의 카테고리 가져오기 -->
	<select id="getCategory" parameterType="long" resultType="string">
		select category_name from tbl_category where category_id = #{categoryId}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="updateMyInfo" parameterType="memberVO">
		UPDATE tbl_member
		SET  member_password=#{memberPassword}, member_name=#{memberName}, member_age=#{memberAge}, member_email=#{memberEmail}, member_nickname=#{memberNickname}
		WHERE member_id= #{memberId}
	</update>
	
	<!-- 프로필 가져오기 -->
	<select id="selectMyProfile" parameterType="long" resultType="memberVO">
		select member_id, member_profile_system_name, member_profile_original_name from tbl_member where member_id = #{memberId}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>